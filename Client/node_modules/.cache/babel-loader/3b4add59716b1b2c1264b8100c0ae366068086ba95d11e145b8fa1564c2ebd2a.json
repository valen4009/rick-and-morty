{"ast":null,"code":"const validate = (userData, errors, setErrors, name) => {\n  if (name == \"email\") {\n    if (userData.email.length < 0) setErrors({\n      ...errors,\n      email: \"Por favor completa este campo\"\n    });else if (userData.email.length > 35) setErrors({\n      ...errors,\n      email: \"Tu E-mail no puede tener mas de 35 caracteres\"\n    });else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.email)) {\n      setErrors({\n        ...errors,\n        email: \"Por favor colocar un E-mail valido\"\n      });\n    } else {\n      setErrors({\n        ...errors,\n        email: \"\"\n      });\n    }\n  }\n  if (name == \"password\") {\n    if (userData.password.length < 0) setErrors({\n      ...errors,\n      password: \"Por favor completa este campo\"\n    });\n    if (!userData.password.length > 5 && !userData.password.length < 11) setErrors({\n      ...errors,\n      password: \"La contrase単a debe tener entre 6 y 10 caracteres\"\n    });else if (!/\\d/.test(userData.password)) setErrors({\n      ...errors,\n      password: \"La contrase単a debe tener al menos un numero\"\n    });else {\n      setErrors({\n        ...errors,\n        password: \"\"\n      });\n    }\n  }\n};\nexport default validate;","map":{"version":3,"names":["validate","userData","errors","setErrors","name","email","length","test","password"],"sources":["C:/Users/valen/OneDrive/Escritorio/rick-and-morty/src/components/Form/validation.js"],"sourcesContent":["const validate = (userData, errors, setErrors, name) => {\r\n    if(name == \"email\"){\r\n    if(userData.email.length < 0)\r\n        setErrors({ ...errors, email: \"Por favor completa este campo\" });\r\n    else if(userData.email.length > 35)\r\n        setErrors({ ...errors, email: \"Tu E-mail no puede tener mas de 35 caracteres\" });\r\n    else if(\r\n        !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{3})+$/.test(userData.email)\r\n    ){\r\n        setErrors({ ...errors, email:\"Por favor colocar un E-mail valido\"})\r\n    } else {\r\n        setErrors({ ...errors, email: \"\" })\r\n    }}\r\n\r\n    if(name == \"password\"){\r\n    if(userData.password.length < 0)\r\n    setErrors({ ...errors, password: \"Por favor completa este campo\" });\r\n    if(!userData.password.length > 5 && !userData.password.length < 11)\r\n    setErrors({ ...errors, password: \"La contrase単a debe tener entre 6 y 10 caracteres\" });\r\n    else if(!/\\d/.test(userData.password))\r\n    setErrors({ ...errors, password: \"La contrase単a debe tener al menos un numero\" });\r\n    else{\r\n        setErrors({ ...errors, password: \"\"});\r\n    }\r\n    }\r\n}\r\n\r\nexport default validate"],"mappings":"AAAA,MAAMA,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,IAAI,KAAK;EACpD,IAAGA,IAAI,IAAI,OAAO,EAAC;IACnB,IAAGH,QAAQ,CAACI,KAAK,CAACC,MAAM,GAAG,CAAC,EACxBH,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,KAAK,EAAE;IAAgC,CAAC,CAAC,CAAC,KAChE,IAAGJ,QAAQ,CAACI,KAAK,CAACC,MAAM,GAAG,EAAE,EAC9BH,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,KAAK,EAAE;IAAgD,CAAC,CAAC,CAAC,KAChF,IACD,CAAC,6CAA6C,CAACE,IAAI,CAACN,QAAQ,CAACI,KAAK,CAAC,EACtE;MACGF,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAEG,KAAK,EAAC;MAAoC,CAAC,CAAC;IACvE,CAAC,MAAM;MACHF,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAEG,KAAK,EAAE;MAAG,CAAC,CAAC;IACvC;EAAC;EAED,IAAGD,IAAI,IAAI,UAAU,EAAC;IACtB,IAAGH,QAAQ,CAACO,QAAQ,CAACF,MAAM,GAAG,CAAC,EAC/BH,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEM,QAAQ,EAAE;IAAgC,CAAC,CAAC;IACnE,IAAG,CAACP,QAAQ,CAACO,QAAQ,CAACF,MAAM,GAAG,CAAC,IAAI,CAACL,QAAQ,CAACO,QAAQ,CAACF,MAAM,GAAG,EAAE,EAClEH,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEM,QAAQ,EAAE;IAAmD,CAAC,CAAC,CAAC,KAClF,IAAG,CAAC,IAAI,CAACD,IAAI,CAACN,QAAQ,CAACO,QAAQ,CAAC,EACrCL,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEM,QAAQ,EAAE;IAA8C,CAAC,CAAC,CAAC,KAC9E;MACAL,SAAS,CAAC;QAAE,GAAGD,MAAM;QAAEM,QAAQ,EAAE;MAAE,CAAC,CAAC;IACzC;EACA;AACJ,CAAC;AAED,eAAeR,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}